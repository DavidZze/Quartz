package hand.hmw.framework.quartz.model.queries;

import hand.hmw.framework.quartz.core.QuartzSchedulerSingleton;

import java.text.SimpleDateFormat;

import java.util.Date;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import org.quartz.JobDetail;
import org.quartz.JobKey;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jul 12 16:04:53 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SchedulejobsBySqlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    SchedulerName {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getSchedulerName();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setSchedulerName((String)value);
      }
    }
    ,
    PrevFireTime {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getPrevFireTime();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setPrevFireTime((Number)value);
      }
    }
    ,
    NextFireTime {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getNextFireTime();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setNextFireTime((Number)value);
      }
    }
    ,
    Priority {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getPriority();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setPriority((Number)value);
      }
    }
    ,
    StartTime {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getStartTime();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setStartTime((Number)value);
      }
    }
    ,
    TriggerState {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getTriggerState();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setTriggerState((String)value);
      }
    }
    ,
    TriggerType {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getTriggerType();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setTriggerType((String)value);
      }
    }
    ,
    JobName {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobName();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobName((String)value);
      }
    }
    ,
    JobGroup {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobGroup();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobGroup((String)value);
      }
    }
    ,
    JobClassName {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobClassName();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobClassName((String)value);
      }
    }
    ,
    JobDescription {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobDescription();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobDescription((String)value);
      }
    }
    ,
    JobCronExpression {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobCronExpression();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobCronExpression((String)value);
      }
    }
    ,
    PreFireTime_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getPreFireTime_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setPreFireTime_tra((String)value);
      }
    }
    ,
    NextFireTime_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getNextFireTime_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setNextFireTime_tra((String)value);
      }
    }
    ,
    StartTime_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getStartTime_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setStartTime_tra((String)value);
      }
    }
    ,
    JobUri_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobUri_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobUri_tra((String)value);
      }
    }
    ,
    JobRequestMessage_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getJobRequestMessage_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setJobRequestMessage_tra((String)value);
      }
    }
    ,
    DBHostName_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBHostName_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBHostName_tra((String)value);
      }
    }
    ,
    DBPort_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBPort_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBPort_tra((String)value);
      }
    }
    ,
    DBSid_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBSid_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBSid_tra((String)value);
      }
    }
    ,
    DBUsername_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBUsername_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBUsername_tra((String)value);
      }
    }
    ,
    DBPwd_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBPwd_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBPwd_tra((String)value);
      }
    }
    ,
    DBPlSql_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBPlSql_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBPlSql_tra((String)value);
      }
    }
    ,
    DBJndiName_tra {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBJndiName_tra();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBJndiName_tra((String)value);
      }
    }
    ,
    DBPlSql2 {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getDBPlSql2();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setDBPlSql2((String)value);
      }
    }
    ,
    TriggerStatusStaticLovVO1 {
      public Object get(SchedulejobsBySqlVORowImpl obj) {
        return obj.getTriggerStatusStaticLovVO1();
      }

      public void put(SchedulejobsBySqlVORowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

        public abstract Object get(SchedulejobsBySqlVORowImpl object);

        public abstract void put(SchedulejobsBySqlVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  public static final int SCHEDULERNAME = AttributesEnum.SchedulerName.index();
  public static final int PREVFIRETIME = AttributesEnum.PrevFireTime.index();
  public static final int NEXTFIRETIME = AttributesEnum.NextFireTime.index();
  public static final int PRIORITY = AttributesEnum.Priority.index();
  public static final int STARTTIME = AttributesEnum.StartTime.index();
  public static final int TRIGGERSTATE = AttributesEnum.TriggerState.index();
  public static final int TRIGGERTYPE = AttributesEnum.TriggerType.index();
  public static final int JOBNAME = AttributesEnum.JobName.index();
  public static final int JOBGROUP = AttributesEnum.JobGroup.index();
  public static final int JOBCLASSNAME = AttributesEnum.JobClassName.index();
  public static final int JOBDESCRIPTION = AttributesEnum.JobDescription.index();
  public static final int JOBCRONEXPRESSION = AttributesEnum.JobCronExpression.index();
  public static final int PREFIRETIME_TRA = AttributesEnum.PreFireTime_tra.index();
  public static final int NEXTFIRETIME_TRA = AttributesEnum.NextFireTime_tra.index();
  public static final int STARTTIME_TRA = AttributesEnum.StartTime_tra.index();
  public static final int JOBURI_TRA = AttributesEnum.JobUri_tra.index();
  public static final int JOBREQUESTMESSAGE_TRA = AttributesEnum.JobRequestMessage_tra.index();
  public static final int DBHOSTNAME_TRA = AttributesEnum.DBHostName_tra.index();
  public static final int DBPORT_TRA = AttributesEnum.DBPort_tra.index();
  public static final int DBSID_TRA = AttributesEnum.DBSid_tra.index();
  public static final int DBUSERNAME_TRA = AttributesEnum.DBUsername_tra.index();
  public static final int DBPWD_TRA = AttributesEnum.DBPwd_tra.index();
  public static final int DBPLSQL_TRA = AttributesEnum.DBPlSql_tra.index();
  public static final int DBJNDINAME_TRA = AttributesEnum.DBJndiName_tra.index();
  public static final int DBPLSQL2 = AttributesEnum.DBPlSql2.index();
  public static final int TRIGGERSTATUSSTATICLOVVO1 = AttributesEnum.TriggerStatusStaticLovVO1.index();

  /**
   * This is the default constructor (do not remove).
   */
    public SchedulejobsBySqlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SchedulerName.
     * @return the SchedulerName
     */
    public String getSchedulerName() {
        return (String) getAttributeInternal(SCHEDULERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchedulerName.
     * @param value value to set the  SchedulerName
     */
    public void setSchedulerName(String value) {
        setAttributeInternal(SCHEDULERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrevFireTime.
     * @return the PrevFireTime
     */
    public Number getPrevFireTime() {
        return (Number) getAttributeInternal(PREVFIRETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrevFireTime.
     * @param value value to set the  PrevFireTime
     */
    public void setPrevFireTime(Number value) {
        setAttributeInternal(PREVFIRETIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NextFireTime.
     * @return the NextFireTime
     */
    public Number getNextFireTime() {
        return (Number) getAttributeInternal(NEXTFIRETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NextFireTime.
     * @param value value to set the  NextFireTime
     */
    public void setNextFireTime(Number value) {
        setAttributeInternal(NEXTFIRETIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Priority.
     * @return the Priority
     */
    public Number getPriority() {
        return (Number) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Priority.
     * @param value value to set the  Priority
     */
    public void setPriority(Number value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StartTime.
     * @return the StartTime
     */
    public Number getStartTime() {
        return (Number) getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StartTime.
     * @param value value to set the  StartTime
     */
    public void setStartTime(Number value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TriggerState.
     * @return the TriggerState
     */
    public String getTriggerState() {
        return (String) getAttributeInternal(TRIGGERSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TriggerState.
     * @param value value to set the  TriggerState
     */
    public void setTriggerState(String value) {
        setAttributeInternal(TRIGGERSTATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TriggerType.
     * @return the TriggerType
     */
    public String getTriggerType() {
        return (String) getAttributeInternal(TRIGGERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TriggerType.
     * @param value value to set the  TriggerType
     */
    public void setTriggerType(String value) {
        setAttributeInternal(TRIGGERTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobName.
     * @return the JobName
     */
    public String getJobName() {
        return (String) getAttributeInternal(JOBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobName.
     * @param value value to set the  JobName
     */
    public void setJobName(String value) {
        setAttributeInternal(JOBNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobGroup.
     * @return the JobGroup
     */
    public String getJobGroup() {
        return (String) getAttributeInternal(JOBGROUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobGroup.
     * @param value value to set the  JobGroup
     */
    public void setJobGroup(String value) {
        setAttributeInternal(JOBGROUP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobClassName.
     * @return the JobClassName
     */
    public String getJobClassName() {
        return (String) getAttributeInternal(JOBCLASSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobClassName.
     * @param value value to set the  JobClassName
     */
    public void setJobClassName(String value) {
        setAttributeInternal(JOBCLASSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobDescription.
     * @return the JobDescription
     */
    public String getJobDescription() {
        return (String) getAttributeInternal(JOBDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobDescription.
     * @param value value to set the  JobDescription
     */
    public void setJobDescription(String value) {
        setAttributeInternal(JOBDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobCronExpression.
     * @return the JobCronExpression
     */
    public String getJobCronExpression() {
        return (String) getAttributeInternal(JOBCRONEXPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobCronExpression.
     * @param value value to set the  JobCronExpression
     */
    public void setJobCronExpression(String value) {
        setAttributeInternal(JOBCRONEXPRESSION, value);
    }






    /**
     * Gets the attribute value for the calculated attribute PreFireTime_tra.
     * @return the PreFireTime_tra
     */
    public String getPreFireTime_tra() {
        String sDateTime = null;
        
        //返回PreFireTime
        if(this.getPrevFireTime() != null) {
            Long preFireTime = this.getPrevFireTime().longValue();
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            java.util.Date dt = new Date(preFireTime);
            sDateTime = sdf.format(dt); 
        }
        
        return sDateTime;
        // return (String) getAttributeInternal(PREFIRETIME_TRAINSENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PreFireTime_tra.
     * @param value value to set the  PreFireTime_tra
     */
    public void setPreFireTime_tra(String value) {
        setAttributeInternal(PREFIRETIME_TRA, value);
    }
    
    
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute NextFireTime_tra.
     * @return the NextFireTime_tra
     */
    public String getNextFireTime_tra() {
        String sDateTime = null;
        
        //返回PreFireTime
        if(this.getNextFireTime() != null) {
            Long nextFireTime = this.getNextFireTime().longValue();
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            java.util.Date dt = new Date(nextFireTime);
            sDateTime = sdf.format(dt); 
        }
        
        return sDateTime;
        
        //return (String) getAttributeInternal(NEXTFIRETIME_TRAINSENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NextFireTime_tra.
     * @param value value to set the  NextFireTime_tra
     */
    public void setNextFireTime_tra(String value) {
        setAttributeInternal(NEXTFIRETIME_TRA, value);
    }
    
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute StartTime_tra.
     * @return the StartTime_tra
     */
    public String getStartTime_tra() {
        String sDateTime = null;
        
        //返回PreFireTime
        if(this.getStartTime() != null) {
            Long startTime = this.getStartTime().longValue();
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            java.util.Date dt = new Date(startTime);
            sDateTime = sdf.format(dt); 
        }
        
        return sDateTime;
        
        //return (String) getAttributeInternal(STARTTIME_TRAINSENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StartTime_tra.
     * @param value value to set the  StartTime_tra
     */
    public void setStartTime_tra(String value) {
        setAttributeInternal(STARTTIME_TRA, value);
    }
    
    
    
    
    
//********************************************************************************************************************************************************
//********************************************************************************************************************************************************    
    
    
    //获取 Quartz 中当前运行的Scheduler (单)实例：
    private Scheduler getStdSchedulerInVORImpl() {
        
        return QuartzSchedulerSingleton.getInstance().getScheduler();
         
    }


    //获取当前job行对应的JobDetail:
    private JobDetail getCurrentRowJobDetail(Scheduler scheduler) throws SchedulerException {
        
        return   scheduler.getJobDetail(JobKey.jobKey(this.getJobName(), this.getJobGroup()));
    }
    
    
//********************************************************************************************************************************************************
//********************************************************************************************************************************************************    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute JobUri_tra.
     * @return the JobUri_tra
     */
    public String getJobUri_tra() {
        //return (String) getAttributeInternal(JOBURI_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();
        
        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("uri");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "uri 信息获取错误！(voImpl 680行)";
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobUri_tra.
     * @param value value to set the  JobUri_tra
     */
    public void setJobUri_tra(String value) {
        setAttributeInternal(JOBURI_TRA, value);
    }
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute JobRequestMessage_tra.
     * @return the JobRequestMessage_tra
     */
    public String getJobRequestMessage_tra() {
        //return (String) getAttributeInternal(JOBREQUESTMESSAGE_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();
        

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("requestMessage");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "requestMessage 信息获取错误！(voImpl 713行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobRequestMessage_tra.
     * @param value value to set the  JobRequestMessage_tra
     */
    public void setJobRequestMessage_tra(String value) {
        setAttributeInternal(JOBREQUESTMESSAGE_TRA, value);
    }
    
    
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBHostName_tra.
     * @return the DBHostName_tra
     */
    public String getDBHostName_tra() {
        //return (String) getAttributeInternal(DBHOSTNAME_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();
        

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("hostName");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库主机Ip 信息获取错误！(voImpl 748行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBHostName_tra.
     * @param value value to set the  DBHostName_tra
     */
    public void setDBHostName_tra(String value) {
        setAttributeInternal(DBHOSTNAME_TRA, value);
    }
    
    
    
    
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBPort_tra.
     * @return the DBPort_tra
     */
    public String getDBPort_tra() {
        //return (String) getAttributeInternal(DBPORT_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("port");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库Port 信息获取错误！(voImpl 784行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBPort_tra.
     * @param value value to set the  DBPort_tra
     */
    public void setDBPort_tra(String value) {
        setAttributeInternal(DBPORT_TRA, value);
    }
    
    
    
    
    
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBSid_tra.
     * @return the DBSid_tra
     */
    public String getDBSid_tra() {
        //return (String) getAttributeInternal(DBSID_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("sid");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库SID 信息获取错误！(voImpl 821行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBSid_tra.
     * @param value value to set the  DBSid_tra
     */
    public void setDBSid_tra(String value) {
        setAttributeInternal(DBSID_TRA, value);
    }
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBUsername_tra.
     * @return the DBUsername_tra
     */
    public String getDBUsername_tra() {
        //return (String) getAttributeInternal(DBUSERNAME_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("username");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库username 信息获取错误！(voImpl 852行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBUsername_tra.
     * @param value value to set the  DBUsername_tra
     */
    public void setDBUsername_tra(String value) {
        setAttributeInternal(DBUSERNAME_TRA, value);
    }
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBPwd_tra.
     * @return the DBPwd_tra
     */
    public String getDBPwd_tra() {
        //return (String) getAttributeInternal(DBPWD_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("pwd");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库username 信息获取错误！(voImpl 883行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBPwd_tra.
     * @param value value to set the  DBPwd_tra
     */
    public void setDBPwd_tra(String value) {
        setAttributeInternal(DBPWD_TRA, value);
    }










    /**
     * Gets the attribute value for the calculated attribute DBPlSql_tra.
     * @return the DBPlSql_tra
     */
    public String getDBPlSql_tra() {
        //return (String) getAttributeInternal(DBPLSQL_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("script");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库pl/sql 脚本 信息获取错误！(voImpl 917行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBPlSql_tra.
     * @param value value to set the  DBPlSql_tra
     */
    public void setDBPlSql_tra(String value) {
        setAttributeInternal(DBPLSQL_TRA, value);
    }
    
    
    
    
    
    
    

    /**
     * Gets the attribute value for the calculated attribute DBJndiName_tra.
     * @return the DBJndiName_tra
     */
    public String getDBJndiName_tra() {
        //return (String) getAttributeInternal(DBJNDINAME_TRA);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("jndiName");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库数据源jndiName 信息获取错误！(voImpl 949行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBJndiName_tra.
     * @param value value to set the  DBJndiName_tra
     */
    public void setDBJndiName_tra(String value) {
        setAttributeInternal(DBJNDINAME_TRA, value);
    }









    /**
     * Gets the attribute value for the calculated attribute DBPlSql2.
     * @return the DBPlSql2
     */
    public String getDBPlSql2() {
        //return (String) getAttributeInternal(DBPLSQL2);
        Scheduler scheduler = this.getStdSchedulerInVORImpl();

        try {
            JobDetail jobDetail = this.getCurrentRowJobDetail(scheduler);
            return jobDetail.getJobDataMap().getString("plsql2");
        } catch (SchedulerException e) {
            e.printStackTrace();
            return "数据库pl/sql脚本 信息获取错误！(voImpl 982行)";                        
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DBPlSql2.
     * @param value value to set the  DBPlSql2
     */
    public void setDBPlSql2(String value) {
        setAttributeInternal(DBPLSQL2, value);
    }


  /**
   * Gets the view accessor <code>RowSet</code> TriggerStatusStaticLovVO1.
   */
  public RowSet getTriggerStatusStaticLovVO1() {
    return (RowSet)getAttributeInternal(TRIGGERSTATUSSTATICLOVVO1);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
